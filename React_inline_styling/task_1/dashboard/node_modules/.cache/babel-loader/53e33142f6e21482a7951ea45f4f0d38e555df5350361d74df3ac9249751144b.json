{"ast":null,"code":"var _jsxFileName = \"/home/iker/Holberton/Specialization/holbertonschool-web_react/react_props/all_task/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport './Notifications.css';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Notifications({\n  displayDrawer = false,\n  listNotifications\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItem\",\n      children: \"Your notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notif-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here is the list of notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"Close\",\n          onClick: () => {\n            console.log('Close button has been clicked');\n          },\n          style: {\n            background: 'none',\n            border: 'none',\n            fontWeight: 'bold',\n            transform: 'scale(1.7)',\n            cursor: 'pointer',\n            alignItems: 'flex-end',\n            padding: '0px 5px',\n            height: '0px'\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listNotifications.length > 0 ? listNotifications.map((notif, index) => index === 2 ? /*#__PURE__*/_jsxDEV(NotificationItem, {\n          type: notif.type,\n          html: notif.html\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(NotificationItem, {\n          type: notif.type,\n          value: notif.value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: '',\n          children: \"No new notification for now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Notifications;\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(PropTypes.shape(NotificationItemShape))\n};\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","NotificationItem","PropTypes","NotificationItemShape","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","displayDrawer","listNotifications","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","console","log","style","background","border","fontWeight","transform","cursor","alignItems","padding","height","length","map","notif","index","html","value","_c","propTypes","bool","arrayOf","shape","$RefreshReg$"],"sources":["/home/iker/Holberton/Specialization/holbertonschool-web_react/react_props/all_task/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react';\nimport './Notifications.css';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\n\nexport default function Notifications({\n  displayDrawer = false,\n  listNotifications\n}) {\n\n  return (\n    <>\n      <div className=\"menuItem\">Your notifications</div>\n      {\n        displayDrawer &&\n        <div className=\"Notifications\">\n          <div className=\"notif-header\">\n            <p>Here is the list of notifications</p>\n            <button type=\"button\" aria-label=\"Close\"\n              onClick={() => {\n                console.log('Close button has been clicked');\n              }}\n              style={{\n                background: 'none',\n                border: 'none',\n                fontWeight: 'bold',\n                transform: 'scale(1.7)',\n                cursor: 'pointer',\n                alignItems: 'flex-end',\n                padding: '0px 5px',\n                height: '0px'\n              }}\n            >x</button>\n          </div>\n          <ul>\n            { listNotifications.length > 0?\n                listNotifications.map((notif, index) => (\n                  index === 2?\n                    <NotificationItem\n                      key={index}\n                      type={notif.type}\n                      html={notif.html}\n                    />:\n                    <NotificationItem\n                      key={index}\n                      type={notif.type}\n                      value={notif.value}\n                    />\n                )):\n                <tr style={''}>No new notification for now</tr>\n            }\n          </ul>\n        </div>\n      }\n    </>\n  );\n}\n\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(\n    PropTypes.shape(NotificationItemShape)\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}